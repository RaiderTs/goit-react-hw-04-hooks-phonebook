{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","components/hooks/useLocalStorage.js","reportWebVitals.js","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","Form","addContact","onUnique","useState","name","setName","phone","setPhone","handleChange","target","value","reset","className","style","form","onSubmit","event","preventDefault","toast","error","newContact","id","shortid","generate","label","input","type","placeholder","onChange","required","button","ContactList","contacts","onRemove","length","list","map","item","info","btn","onClick","Filter","filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","filterContacts","contact","toLowerCase","includes","prevContacts","newName","handleName","find","contactId","autoClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aca8c56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__ujUGS\",\"input\":\"Filter_input__1bQEi\"};","import { useState } from 'react';\r\nimport style from './Form.module.css';\r\nimport shortid from 'shortid';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Form({ addContact, onUnique }) {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    // if (name.trim() === '' || phone.trim() === '') {\r\n    //   toast.info('One of the fields is not filled');\r\n    //   // return false;\r\n    // } else\r\n      if (onUnique(name)) {\r\n      toast.error(`${name} is already in contacts list`);\r\n    } else {\r\n      const newContact = { id: shortid.generate(), name, phone };\r\n      addContact(newContact);\r\n    }\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <form className={style.form} onSubmit={handleSubmit}>\r\n      <label className={style.label}>\r\n        Name\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={style.label}>\r\n        number\r\n        <input\r\n          className={style.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          placeholder=\"Enter phone number\"\r\n          value={phone}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onRemove }) {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={style.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <li className={style.item} key={id}>\r\n          <p className={style.info}>\r\n            {name}: {phone}\r\n          </p>\r\n          <button className={style.btn} onClick={() => onRemove(id)}>\r\n            Remove\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n\r\n  return (\r\n    <label className={style.label}>\r\n      Enter name for search\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange} \r\n        placeholder=\"Enter a name to search\"\r\n      />\r\n    </label>\r\n  ); \r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from 'react';\n\nimport ContactForm from './components/Form/Form.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filter/Filter.jsx';\nimport { ToastContainer } from 'react-toastify'; \nimport 'react-toastify/dist/ReactToastify.css'; \n\nimport useLocalStorage from '../src/components/hooks/useLocalStorage';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('userContacts', []);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = newContact => {\n    setContacts(prevContacts => [...prevContacts, newContact]);\n  };\n\n  const handleCheckUnique = newName => {\n    const handleName = newName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === handleName);\n  };\n\n  const handleRemoveContact = contactId => {\n    setContacts(prevContacts => [\n      ...prevContacts.filter(({ id }) => id !== contactId),\n    ]);\n  };\n  \n  const handleFilterChange = ({ target }) => {\n    const { value } = target;\n    setFilter(value);\n  };\n  \n  const onFilterContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const filterContacts = onFilterContacts();\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm\n        addContact={handleAddContact} \n        onUnique={handleCheckUnique}\n      />\n      <h2>Contacts List</h2>\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <ContactList\n        contacts={filterContacts} \n        onRemove={handleRemoveContact} \n      />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2hmw7\",\"label\":\"Form_label__24Ffd\",\"input\":\"Form_input__3qiYp\",\"button\":\"Form_button__iTeSo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__34TBc\",\"item\":\"ContactList_item__2IvmO\",\"btn\":\"ContactList_btn__1Vb-T\"};"],"sourceRoot":""}